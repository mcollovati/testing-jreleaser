name: Validation
on:
  push:
    branches: [main]
  workflow_dispatch:
  pull_request_target:
    types: [opened, synchronize, reopened, edited]
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write
concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true
env:
  JAVA_VERSION: 17
jobs:
  check-user:
    uses: ./.github/workflows/check-permissions.yaml
    with:
      username: ${{github.triggering_actor}}
  format-check:
    needs: [ check-user ]
    runs-on: ubuntu-22.04
    if: github.event_name != 'pull_request_target'
    steps:
      - name: Remove labels
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            
            // Remove the label if it exists
            const existingLabels = await github.rest.issues.listLabelsOnIssue({
              owner,
              repo,
              issue_number: prNumber,
            });
            const labelsToRemove = existingLabels.data.map(label => label.name).filter( label => label.startsWith("format:") );
            for (const labelToRemove of labelsToRemove) {
              await github.rest.issues.removeLabel({
                owner,
                repo,
                issue_number: prNumber,
                name: labelToRemove,
              });
            }
      - name: Prepare PR comment
        run: |
          echo "a" >> /tmp/files.txt
          echo "b" >> /tmp/files.txt
          echo "c" >> /tmp/files.txt
          _files=$(wc -l /tmp/files.txt)
          echo "# Format Checker Report" >> /tmp/message
          echo "" >> /tmp/message
          echo "There are ${_files} files with format errors" >> /tmp/message
          echo "" >> /tmp/message
          echo '* To fix the build, please run `mvn spotless:apply` in your branch and commit the changes.' >> /tmp/message 
          echo '* In alternative apply the `automation/format` label to the PR.' >> /tmp/message
          echo "" >> /tmp/message
          echo "" >> /tmp/message
          echo "Here is the list of files with format issues in your PR:" >> /tmp/message
          echo '```' >> /tmp/message
          cat /tmp/files.txt  >> /tmp/message
          echo '```' >> /tmp/message
          echo "" >> /tmp/message
          echo "" >> /tmp/message
          echo "And here the full diff: " >> /tmp/message
          echo "<details>" >> /tmp/message
          echo "  <summary>Full Diff</summary>" >> /tmp/message
          echo "" >> /tmp/message
          echo '```patch' >> /tmp/message
          cat /tmp/files.txt  >> /tmp/message
          echo '```' >> /tmp/message
          echo "</details>" >> /tmp/message
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: /tmp/message
          comment_tag: formatting-check
      - name: Add label to PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            const labelToAdd = 'format:required';

            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: prNumber,
              labels: [labelToAdd],
            });

  run-validation:
    uses: ./.github/workflows/build-and-test.yaml
    needs: [ check-user ]
    with:
      java_version: 17
      ref: ${{ github.event.pull_request.head.sha }}
